syntax = "proto3";

package resource.v1;

import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";

// Delta is a set of graph objects that is being modified by operation op.
message Delta {
  DeltaOperation op = 1;
  repeated Object objects = 2;
}

// DeltaOperation is the type of change that is being made to the object.
enum DeltaOperation {
  // Create a new object in the graph.
  DELTA_OPERATION_CREATE = 0;
  // Update an existing object in the graph.
  DELTA_OPERATION_UPDATE = 1;
  // Delete an object from the graph.
  DELTA_OPERATION_DELETE = 2;
  // Heartbeat is a special type of delta that is used to keep an object with a
  // TTL alive.
  DELTA_OPERATION_HEARTBEAT = 3;
}

// Object is a resource or relationship object that is part of the delta set.
message Object {
  // The unique object name within the delta set.
  // For DeltaType_DELTA_TYPE DELETE events, only this field needs to be set.
  string name = 1;
  // Time-to-live value for the object. For each object, a timer is started.
  // The timer is reset each time the object is received with a new TTL.
  // If the object is received with no TTL set, the timer is removed for the
  // object. Upon expiration of the timer, the object is considered deleted.
  //
  // The TTL can be refreshed or changed by sending a Delta containing an Object
  // with the same name that doesn't change the object version. In this case the
  // object field does not need to be populated, which allows for light-weight
  // "heartbeat" updates to keep an object with a TTL alive.
  //
  // The TTL feature is meant to support cleaning up objects in the event of
  // a systems-agent removal/failure. For example, if the Kubernetes cluster
  // where the systems agent is deployed in is spun down, then all the resources
  // from the cluster will be deleted from the graph once the TTL expires.
  google.protobuf.Duration ttl = 2;
  // The delta version of the Delta change set that the object is a part of.
  // It is used to keep track of the state of individual objects. The version is
  // set and maintained by the client sending Deltas.
  //
  // NOTE: the version string should only be used for comparisions!
  // It is not guaranteed that the version string is monotonically increasing.
  string delta_version = 3;

  // The Resource or Relationship object
  google.protobuf.Any object = 4;
}
