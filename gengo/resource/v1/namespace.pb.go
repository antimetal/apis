// Antimetal API definitions
// Copyright Antimetal, Inc. All rights reserved.
//
// Use of this source code and APIs are governed by a source available license that can be found in
// the LICENSE file or at:
// https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: resource/v1/namespace.proto

package resourcev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Namespace is a scope for a resource.
type Namespace struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Namespace:
	//
	//	*Namespace_Cloud
	//	*Namespace_Kube
	Namespace     isNamespace_Namespace `protobuf_oneof:"namespace"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Namespace) Reset() {
	*x = Namespace{}
	mi := &file_resource_v1_namespace_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Namespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Namespace) ProtoMessage() {}

func (x *Namespace) ProtoReflect() protoreflect.Message {
	mi := &file_resource_v1_namespace_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Namespace.ProtoReflect.Descriptor instead.
func (*Namespace) Descriptor() ([]byte, []int) {
	return file_resource_v1_namespace_proto_rawDescGZIP(), []int{0}
}

func (x *Namespace) GetNamespace() isNamespace_Namespace {
	if x != nil {
		return x.Namespace
	}
	return nil
}

func (x *Namespace) GetCloud() *CloudNamespace {
	if x != nil {
		if x, ok := x.Namespace.(*Namespace_Cloud); ok {
			return x.Cloud
		}
	}
	return nil
}

func (x *Namespace) GetKube() *KubernetesNamespace {
	if x != nil {
		if x, ok := x.Namespace.(*Namespace_Kube); ok {
			return x.Kube
		}
	}
	return nil
}

type isNamespace_Namespace interface {
	isNamespace_Namespace()
}

type Namespace_Cloud struct {
	Cloud *CloudNamespace `protobuf:"bytes,1,opt,name=cloud,proto3,oneof"`
}

type Namespace_Kube struct {
	Kube *KubernetesNamespace `protobuf:"bytes,2,opt,name=kube,proto3,oneof"`
}

func (*Namespace_Cloud) isNamespace_Namespace() {}

func (*Namespace_Kube) isNamespace_Namespace() {}

// CloudNamespace specifies the namespace scope for cloud resources.
type CloudNamespace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Account       *ProviderAccount       `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Region        string                 `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	Group         string                 `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloudNamespace) Reset() {
	*x = CloudNamespace{}
	mi := &file_resource_v1_namespace_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloudNamespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudNamespace) ProtoMessage() {}

func (x *CloudNamespace) ProtoReflect() protoreflect.Message {
	mi := &file_resource_v1_namespace_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudNamespace.ProtoReflect.Descriptor instead.
func (*CloudNamespace) Descriptor() ([]byte, []int) {
	return file_resource_v1_namespace_proto_rawDescGZIP(), []int{1}
}

func (x *CloudNamespace) GetAccount() *ProviderAccount {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *CloudNamespace) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CloudNamespace) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

// KubernetesNamespace specifies the namespace scope for Kubernetes resources.
type KubernetesNamespace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cluster       string                 `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KubernetesNamespace) Reset() {
	*x = KubernetesNamespace{}
	mi := &file_resource_v1_namespace_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesNamespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesNamespace) ProtoMessage() {}

func (x *KubernetesNamespace) ProtoReflect() protoreflect.Message {
	mi := &file_resource_v1_namespace_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesNamespace.ProtoReflect.Descriptor instead.
func (*KubernetesNamespace) Descriptor() ([]byte, []int) {
	return file_resource_v1_namespace_proto_rawDescGZIP(), []int{2}
}

func (x *KubernetesNamespace) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *KubernetesNamespace) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

var File_resource_v1_namespace_proto protoreflect.FileDescriptor

var file_resource_v1_namespace_proto_rawDesc = string([]byte{
	0x0a, 0x1b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1a, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x85, 0x01, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x48, 0x00, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0x36, 0x0a, 0x04, 0x6b, 0x75, 0x62,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x48, 0x00, 0x52, 0x04, 0x6b, 0x75, 0x62,
	0x65, 0x42, 0x0b, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x76,
	0x0a, 0x0e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x36, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x4d, 0x0a, 0x13, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e,
	0x65, 0x74, 0x65, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0xa6, 0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0e, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x36, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61,
	0x6c, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x67, 0x6f, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x52, 0x58, 0x58, 0xaa, 0x02, 0x0b, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x17, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_resource_v1_namespace_proto_rawDescOnce sync.Once
	file_resource_v1_namespace_proto_rawDescData []byte
)

func file_resource_v1_namespace_proto_rawDescGZIP() []byte {
	file_resource_v1_namespace_proto_rawDescOnce.Do(func() {
		file_resource_v1_namespace_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_resource_v1_namespace_proto_rawDesc), len(file_resource_v1_namespace_proto_rawDesc)))
	})
	return file_resource_v1_namespace_proto_rawDescData
}

var file_resource_v1_namespace_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_resource_v1_namespace_proto_goTypes = []any{
	(*Namespace)(nil),           // 0: resource.v1.Namespace
	(*CloudNamespace)(nil),      // 1: resource.v1.CloudNamespace
	(*KubernetesNamespace)(nil), // 2: resource.v1.KubernetesNamespace
	(*ProviderAccount)(nil),     // 3: resource.v1.ProviderAccount
}
var file_resource_v1_namespace_proto_depIdxs = []int32{
	1, // 0: resource.v1.Namespace.cloud:type_name -> resource.v1.CloudNamespace
	2, // 1: resource.v1.Namespace.kube:type_name -> resource.v1.KubernetesNamespace
	3, // 2: resource.v1.CloudNamespace.account:type_name -> resource.v1.ProviderAccount
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_resource_v1_namespace_proto_init() }
func file_resource_v1_namespace_proto_init() {
	if File_resource_v1_namespace_proto != nil {
		return
	}
	file_resource_v1_provider_proto_init()
	file_resource_v1_namespace_proto_msgTypes[0].OneofWrappers = []any{
		(*Namespace_Cloud)(nil),
		(*Namespace_Kube)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_resource_v1_namespace_proto_rawDesc), len(file_resource_v1_namespace_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resource_v1_namespace_proto_goTypes,
		DependencyIndexes: file_resource_v1_namespace_proto_depIdxs,
		MessageInfos:      file_resource_v1_namespace_proto_msgTypes,
	}.Build()
	File_resource_v1_namespace_proto = out.File
	file_resource_v1_namespace_proto_goTypes = nil
	file_resource_v1_namespace_proto_depIdxs = nil
}
